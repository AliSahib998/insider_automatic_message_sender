{
    "swagger": "2.0",
    "info": {
        "description": "Gin API with Swagger documentation Message service for Insider",
        "title": "Insider Message Service",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1/messages",
    "paths": {
        "/": {
            "post": {
                "description": "Save a new message with phone number and content. It will be sent automatically later.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Create message",
                "parameters": [
                    {
                        "description": "Message data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MessageDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sent": {
            "get": {
                "description": "Retrieves all messages from the database that have been marked as sent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "List delivered (sent) messages",
                "responses": {
                    "200": {
                        "description": "List of delivered messages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.MessageView"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/start": {
            "post": {
                "description": "Starts a background process that sends unsent messages every 2 minutes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Start automatic message sending",
                "responses": {
                    "200": {
                        "description": "status message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/stop": {
            "post": {
                "description": "Stops the background process that sends unsent messages every 2 minutes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Stop automatic message sending",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.MessageDto": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "model.MessageView": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "messageId": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "sent": {
                    "type": "boolean"
                },
                "sentAt": {
                    "type": "string"
                }
            }
        }
    }
}